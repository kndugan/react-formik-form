{"ast":null,"code":"var _jsxFileName = \"/Users/kristinedugan/Desktop/formik-form/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css'; // TODO: import useFormik from formik library\n\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.password) errors.password = 'Field Required';\n\n      if (!values.email) {\n        errors.email = 'Field Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Username should be an email';\n      }\n\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The app is ready! You can proceed with the task instructions. TODO: build you form here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"emailField\",\n        name: \"email\",\n        type: \"email\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"pswField\",\n        name: \"password\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pswError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submitBtn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useFormik","App","formik","initialValues","email","password","onSubmit","values","alert","JSON","stringify","validate","errors","test","handleSubmit","handleChange","color"],"sources":["/Users/kristinedugan/Desktop/formik-form/src/App.js"],"sourcesContent":["import './App.css';\n// TODO: import useFormik from formik library\nimport { useFormik} from 'formik'\n\n\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''      \n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n    validate: values =>{\n      let errors = {};\n      if(!values.password) errors.password = 'Field Required';\n      if(!values.email) {\n        errors.email = 'Field Required'\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Username should be an email';\n      }\n      return errors;\n    }\n  });\n  return (\n    <div>\n      <p>\n        The app is ready! You can proceed with the task instructions. TODO:\n        build you form here.\n      </p>\n      <form onSubmit={formik.handleSubmit}>\n        <div>Username:</div>\n        <input \n          id=\"emailField\" \n          name=\"email\"\n          type=\"email\"  \n          onChange={formik.handleChange} \n          value={formik.values.email}\n        />\n        {formik.errors.email ? <div id=\"emailError\" style={{color:'red'}}>{formik.errors.email}</div> : null}        \n        <div>Password:</div>\n        <input \n          id=\"pswField\" \n          name=\"password\"\n          type=\"text\"  \n          onChange={formik.handleChange} \n          value={formik.values.password}\n          /><br/>\n        {formik.errors.password ? <div id=\"pswError\" style={{color:'red'}}>{formik.errors.password}</div> : null}                \n        <button \n          id=\"submitBtn\" \n          type=\"submit\">Submit\n        </button>\n      </form>    \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP,C,CACA;;AACA,SAASA,SAAT,QAAyB,QAAzB;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb;EAEA,MAAMC,MAAM,GAAGF,SAAS,CAAC;IACvBG,aAAa,EAAE;MACbC,KAAK,EAAE,EADM;MAEbC,QAAQ,EAAE;IAFG,CADQ;IAKvBC,QAAQ,EAAEC,MAAM,IAAI;MAClBC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;IACD,CAPsB;IAQvBI,QAAQ,EAAEJ,MAAM,IAAG;MACjB,IAAIK,MAAM,GAAG,EAAb;MACA,IAAG,CAACL,MAAM,CAACF,QAAX,EAAqBO,MAAM,CAACP,QAAP,GAAkB,gBAAlB;;MACrB,IAAG,CAACE,MAAM,CAACH,KAAX,EAAkB;QAChBQ,MAAM,CAACR,KAAP,GAAe,gBAAf;MACD,CAFD,MAEO,IAAI,CAAC,4CAA4CS,IAA5C,CAAiDN,MAAM,CAACH,KAAxD,CAAL,EAAqE;QAC1EQ,MAAM,CAACR,KAAP,GAAe,6BAAf;MACD;;MACD,OAAOQ,MAAP;IACD;EAjBsB,CAAD,CAAxB;EAmBA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAM,QAAQ,EAAEV,MAAM,CAACY,YAAvB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,EAAE,EAAC,YADL;QAEE,IAAI,EAAC,OAFP;QAGE,IAAI,EAAC,OAHP;QAIE,QAAQ,EAAEZ,MAAM,CAACa,YAJnB;QAKE,KAAK,EAAEb,MAAM,CAACK,MAAP,CAAcH;MALvB;QAAA;QAAA;QAAA;MAAA,QAFF,EASGF,MAAM,CAACU,MAAP,CAAcR,KAAd,gBAAsB;QAAK,EAAE,EAAC,YAAR;QAAqB,KAAK,EAAE;UAACY,KAAK,EAAC;QAAP,CAA5B;QAAA,UAA4Cd,MAAM,CAACU,MAAP,CAAcR;MAA1D;QAAA;QAAA;QAAA;MAAA,QAAtB,GAA+F,IATlG,eAUE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF,eAWE;QACE,EAAE,EAAC,UADL;QAEE,IAAI,EAAC,UAFP;QAGE,IAAI,EAAC,MAHP;QAIE,QAAQ,EAAEF,MAAM,CAACa,YAJnB;QAKE,KAAK,EAAEb,MAAM,CAACK,MAAP,CAAcF;MALvB;QAAA;QAAA;QAAA;MAAA,QAXF,eAiBM;QAAA;QAAA;QAAA;MAAA,QAjBN,EAkBGH,MAAM,CAACU,MAAP,CAAcP,QAAd,gBAAyB;QAAK,EAAE,EAAC,UAAR;QAAmB,KAAK,EAAE;UAACW,KAAK,EAAC;QAAP,CAA1B;QAAA,UAA0Cd,MAAM,CAACU,MAAP,CAAcP;MAAxD;QAAA;QAAA;QAAA;MAAA,QAAzB,GAAmG,IAlBtG,eAmBE;QACE,EAAE,EAAC,WADL;QAEE,IAAI,EAAC,QAFP;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAnBF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD;;GAtDQJ,G;UAGQD,S;;;KAHRC,G;AAwDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}